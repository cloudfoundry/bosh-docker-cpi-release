---
jobs:
  - name: unit-test
    plan:
      - in_parallel:
        - get: bosh-docker-cpi-release
          trigger: true
        - get: ci
        - get: ci-image
      - task: unit-tests
        file: ci/ci/tasks/unit-tests.yml
        image: ci-image

  - name: integration-test
    plan:
    - in_parallel:
      - get: bosh-docker-cpi-release
        trigger: true
        passed:
        - unit-test
      - get: bosh-deployment
      - get: ci
      - get: docker-cpi-image
      - get: bosh-cli-registry-image
      - get: bosh-shared-ci
    - task: build-release
      file: bosh-shared-ci/tasks/release/create-dev-release.yml
      image: bosh-cli-registry-image
      input_mapping:
        release_repo: bosh-docker-cpi-release
      output_mapping:
        release_tarball: bosh-cpi-dev-artifacts
    - task: integration-test
      file: ci/ci/tasks/setup-director.yml
      privileged: true
      image: docker-cpi-image

  - name: automatically-release-new-patch
    serial_groups: [version]
    plan:
    - in_parallel:
      - get: bosh-docker-cpi-release
        trigger: true
        passed:
        - integration-test
      - get: current-version
        resource: release-version-semver
      - get: patched-version
        resource: release-version-semver
        params:
          bump: patch
      - get: bosh-security-scanner-registry-image
      - get: bosh-shared-ci
    - try:
        task: check-for-patched-cves
        file: bosh-shared-ci/tasks/release/check-for-patched-cves.yml
        image: bosh-security-scanner-registry-image
        input_mapping:
          input_repo: bosh-docker-cpi-release
          version: current-version
        params:
          SEVERITY: CRITICAL,HIGH
        on_success:
          do:
            - put: release-notes
              params:
                file: release-notes/release-notes.md
            - put: release-version-semver
              params:
                file: patched-version/version
    - task: ensure-cve-checker-succeeded
      file: bosh-shared-ci/tasks/release/ensure-task-succeeded.yml
      image: bosh-security-scanner-registry-image
      input_mapping:
        task-output-folder: patched_cves
    - try:
        task: check-for-updated-vendored-packages
        file: bosh-shared-ci/tasks/release/check-for-updated-vendored-packages.yml
        image: bosh-security-scanner-registry-image
        input_mapping:
          input_repo: bosh-docker-cpi-release
          version: current-version
        params:
          PACKAGES: [golang-1-linux, golang-1-darwin]
        on_success:
          do:
            - put: release-notes
              params:
                file: release-notes/release-notes.md
            - put: release-version-semver
              params:
                file: patched-version/version
    - task: ensure-update-package-check-succeeded
      file: bosh-shared-ci/tasks/release/ensure-task-succeeded.yml
      image: bosh-security-scanner-registry-image
      input_mapping:
        task-output-folder: package-updates

  - name: promote-candidate
    disable_manual_trigger: true
    serial_groups: [version]
    plan:
      - in_parallel:
        - get: bosh-docker-cpi-release
          passed:
          - integration-test
        - get: release-version-semver
          trigger: true
        - get: release-notes
        - get: bosh-shared-ci
        - get: bosh-cli-registry-image
      - task: create-final-release
        image: bosh-cli-registry-image
        file: bosh-shared-ci/tasks/release/create-final-release.yml
        input_mapping:
          release_repo: bosh-docker-cpi-release
          version: release-version-semver
        params:
          GIT_USER_NAME: CI Bot
          GIT_USER_EMAIL: bots@cloudfoundry.org
          PRIVATE_YML: |
            ---
            blobstore:
              options:
                credentials_source: static
                json_key: '((gcp_json_key))'
      - put: bosh-docker-cpi-release
        params:
          repository: release_repo
          rebase: true
          tag: release_metadata/tag-name
      - put: github-release
        params:
          name: release_metadata/version
          tag: release_metadata/version
          body: release-notes/release-notes.md
          commitish: bosh-docker-cpi-release/.git/ref
          generate_release_notes: true
      - put: release-notes
        params:
          file: release_metadata/empty-file

  - name: release-new-major
    serial_groups: [version]
    plan:
      - put: release-version-semver
        params:
          bump: major

  - name: release-new-minor
    serial_groups: [version]
    plan:
      - put: release-version-semver
        params:
          bump: minor

  - name: release-new-patch
    serial_groups: [version]
    plan:
      - put: release-version-semver
        params:
          bump: patch

  - name: bump-deps
    plan:
    - in_parallel:
      - get: bosh-docker-cpi-release
      - get: golang-release
      - get: ci
      - get: weekly
        trigger: true
      - get: golang-release-registry-image
      - get: ci-image
    - task: bump-deps
      file: golang-release/ci/tasks/shared/bump-deps.yml
      image: golang-release-registry-image
      input_mapping:
        input_repo: bosh-docker-cpi-release
      output_mapping:
        output_repo: bosh-docker-cpi-release
      params:
        SOURCE_PATH: src/bosh-docker-cpi
    - task: unit-tests
      file: ci/ci/tasks/unit-tests.yml
      image: ci-image
    - put: bosh-docker-cpi-release
      params:
        repository: bosh-docker-cpi-release
        rebase: true

  - name: bump-golang-packages
    plan:
    - in_parallel:
      - get: bosh-docker-cpi-release
      - get: golang-release
        trigger: true
      - get: golang-release-registry-image
    - task: bump-golang-packages
      file: golang-release/ci/tasks/shared/bump-golang-package.yml
      image: golang-release-registry-image
      input_mapping:
        input_repo: bosh-docker-cpi-release
      output_mapping:
        output_repo: bosh-docker-cpi-release
      params:
        PACKAGES: [golang-1-linux, golang-1-darwin]
        PRIVATE_YML: |
          blobstore:
              options:
                credentials_source: static
                json_key: '((gcp_json_key))'
    - put: bosh-docker-cpi-release
      params:
        repository: bosh-docker-cpi-release
        rebase: true

resources:
  - name: weekly
    type: time
    source:
      start: 3:00 -0700
      stop: 4:30 -0700
      days: [ Saturday ]
      initial_version: true

  - name: bosh-docker-cpi-release
    type: git
    source:
      uri: git@github.com:cloudfoundry/bosh-docker-cpi-release.git
      private_key: ((github_deploy_key_bosh-docker-cpi-release.private_key))
      branch: master

  - name: bosh-shared-ci
    type: git
    source:
      uri: git@github.com:cloudfoundry/bosh-shared-ci.git
      private_key: ((github_deploy_key_bosh-shared-ci.private_key))

  - name: golang-release
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-package-golang-release.git

  - name: bosh-deployment
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-deployment.git
      branch: master

  - name: ci
    type: git
    source:
      paths:
        - ci/*
      uri: git@github.com:cloudfoundry/bosh-docker-cpi-release.git
      private_key: ((github_deploy_key_bosh-docker-cpi-release.private_key))

  - name: github-release
    type: github-release
    source:
      owner: cloudfoundry
      repository: bosh-docker-cpi-release
      access_token: ((github_public_repo_token))

  - name: release-notes
    type: gcs-resource
    source:
      bucket: bosh-docker-cpi-release
      json_key: ((gcp_json_key))
      regexp: release-notes/release-notes.md

  - name: release-version-semver
    type: semver
    source:
      driver: gcs
      bucket: bosh-docker-cpi-release
      json_key: ((gcp_json_key))
      key: semver/current-release-version

  - name: docker-cpi-image
    type: registry-image
    source:
      repository: bosh/docker-cpi
      tag: latest
      username: ((dockerhub_username))
      password: ((dockerhub_password))

  - name: ci-image
    type: registry-image
    source:
      repository: bosh/integration
      tag: latest
      username: ((dockerhub_username))
      password: ((dockerhub_password))

  - name: bosh-cli-registry-image
    type: registry-image
    source:
      repository: bosh/cli
      username: ((dockerhub_username))
      password: ((dockerhub_password))

  - name: golang-release-registry-image
    type: registry-image
    source:
      repository: bosh/golang-release
      username: ((dockerhub_username))
      password: ((dockerhub_password))

  - name: bosh-security-scanner-registry-image
    type: registry-image
    source:
      repository: bosh/security-scanner
      username: ((dockerhub_username))
      password: ((dockerhub_password))

resource_types:
- name: gcs-resource
  type: docker-image
  source:
    repository: frodenas/gcs-resource
